// Creating tables
Table users as U {
  id varchar [pk]
  full_name varchar
  email varchar
  password varchar
  remember_token varchar
  appointed_as_reviewer int [default: 0]
  accepted_reviewer int [default: 0]
  completed_review int [default: 0]
  deleted_at timestamp [default: null]
}

Table articles {
  id varchar [pk]
  user_id varchar // corresponding
  editor_id varchar [default: null]
  title varchar
  abstract text
  state article_state
  page_count int [default: null]
  note text [default: null]
  language varchar [default: 'en']
  doi varchar [default: null]
  source text [default: null]
  type_id int
  latex_path varchar [default: null]
  deleted_at timestamp [default: null]
 }
 
Table reviews {
  id int [pk, increment]
  user_id varchar
  revision_id int
  state tinyint [default: 0] 
  // 0: WAITING, 1: DECLINED, 2: ACCEPTED, 3: NOT SPECIFIED, 4: REJECTED, 5: REQUEST, 6: APPROVED
  content text
}

Table revisions {
  id int [pk, increment]
  article_id varchar
  note text
  pdf_path varchar
  deleted_at timestamp [default: null]
}

Table volumes {
  id int [pk, increment]
  title varchar [default: null]
  description text
  release_year year
}

Table categories {
  id int [pk, increment]
  name varchar
}

Table types {
  id int [pk]
  name varchar
  active boolean [default: 1]
}

Table volume_article {
  volume_id int [pk]
  article_id varchar [pk]
  from_page int
  to_page int
}

Table category_article {
  category_id int [pk]
  article_id varchar [pk]
}

// Creating references
// > many-to-one; < one-to-many; - one-to-one
Ref: reviews.user_id > U.id
Ref: revisions.id < reviews.revision_id
Ref: revisions.article_id > articles.id
Ref: volumes.id < volume_article.volume_id
Ref: articles.id < volume_article.article_id
Ref: categories.id < category_article.category_id
Ref: articles.id < category_article.article_id
Ref: articles.type_id > types.id
Ref: articles.user_id - users.id
Ref: articles.editor_id - users.id

//Creating Enums
Enum article_state {
  SUBMITTED
  UNDER_REVIEW
  ACCEPTED
  REJECTED
}